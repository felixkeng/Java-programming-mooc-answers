import java.util.*;
import java.io.*;
import java.nio.file.*;
public class SaveableDictionary {
    private HashMap<String,String> list;
    private String file;
    public void add(String a, String b){
        list.putIfAbsent(a,b);
    }
    public String translate(String word){
        if (list.containsKey(word)){
            return list.get(word);
        }
        for (String i : list.keySet()){
            if (list.get(i).equals(word)){
                return i;
            }
        }
        return null;
    }
    public void delete(String word){
        if (list.containsKey(word)){
            list.remove(word);
        }
        for (String i : list.keySet()){
            if (list.get(i).equals(word)){
                list.remove(i);
                return;
            }
        }
        
    }
    public SaveableDictionary(String file){
        this.file = file;
        list = new HashMap<>();
    }
    public SaveableDictionary(){
        list = new HashMap<>();
    }
    public boolean load(){
        try (Scanner scan = new Scanner(Paths.get(this.file))){
            while (scan.hasNextLine()) {
                String line = scan.nextLine();
                String[] parts = line.split(":");
                list.put(parts[0], parts[1]);
            }
            return true;
            
        } catch (Exception e){
            return false;
        }
    }
    public boolean save(){
        try (PrintWriter writer = new PrintWriter(file)){
            for (String i : list.keySet()){
                writer.println(i + ":" + list.get(i));
            }
            return true;
        } catch (Exception e ){
            return false;
        }
    }
}
